{"version":3,"file":"static/js/387.095fc464.chunk.js","mappings":"sRAEMA,EAAM,mCACNC,EAAU,+BAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAAgCC,EAAhC,+BAAuC,EACtCC,EADD,UACUH,EADV,uCACgDD,EADhD,iBAC4DG,GAD5D,SAEkBE,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,mEAaA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACCL,EADD,UACUH,EADV,kBAC2BQ,EAD3B,oBAC8CT,GAD9C,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA4BD,GAA5B,kFACCL,EADD,UACUH,EADV,kBAC2BQ,EAD3B,4BACsDT,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kFACCL,EADD,UACUH,EADV,kBAC2BQ,EAD3B,4BACsDT,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,kEApBPL,G,gICRaU,EAAYC,EAAAA,GAAAA,GAAH,6EAMTC,EAAWD,EAAAA,GAAAA,GAAH,+D,SC4BrB,EA9BgB,WACd,IAAQJ,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAA8BO,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAgBF,GAASW,KAAKF,EAC/B,GAAE,CAACT,IAECQ,GAKH,8BACGA,EAAQI,OAAS,GAChB,SAAC,EAAD,UACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAAC,EAAD,YACE,qCAAaD,MACb,uBAAIC,MAFWF,EADN,OAQf,mEAfG,IAmBV,C","sources":["components/Fetch/FetchApi.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '7ef9ec3d0132c19ab4685d32429ba26e';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport async function GetMovieTrending(page = 1) {\n  const url = `${API_URL}/trending/movie/day?api_key=${KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\nGetMovieTrending();\n\nexport async function GetSearchMovies(query) {\n  const url = `${API_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nexport async function GetMovieDetails(movieId) {\n  const url = `${API_URL}/movie/${movieId}?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieCast(movieId) {\n  const url = `${API_URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieReviews(movieId) {\n  const url = `${API_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n","import styled from 'styled-components';\n\nexport const UlReviews = styled.ul`\n  list-style: none;\n  padding: px;\n  margin: 0px;\n`;\n\nexport const ReviewLi = styled.li`\n  list-style: none;\n  padding: 50px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { GetMovieReviews } from 'components/Fetch/FetchApi';\nimport * as s from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    GetMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  if (!reviews) {\n    return null;\n  }\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <s.UlReviews>\n          {reviews.map(({ id, author, content }) => (\n            <s.ReviewLi key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </s.ReviewLi>\n          ))}\n        </s.UlReviews>\n      ) : (\n        <h3>We don't have reviews for this movie</h3>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","API_URL","GetMovieTrending","page","url","axios","data","results","GetMovieDetails","movieId","GetMovieCast","GetMovieReviews","UlReviews","styled","ReviewLi","useParams","useState","reviews","setReviews","useEffect","then","length","map","id","author","content"],"sourceRoot":""}