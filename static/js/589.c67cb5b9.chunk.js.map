{"version":3,"file":"static/js/589.c67cb5b9.chunk.js","mappings":"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","sources":["components/MovieSearch/MovieSearch.styled.jsx","components/MovieSearch/MovieSearch.jsx","Page/Movies/Movies.jsx","components/Fetch/FetchApi.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  top: 0;\n  left: 0;\n  width: 100%;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background: linear-gradient(\n    90deg,\n    rgba(239, 240, 36, 0.8323529240797882) 48%,\n    rgba(32, 137, 209, 0.6642856971890319) 64%\n  );\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 5px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 18px;\n  padding: 10px 16px;\n  border-radius: 5px;\n  border: 1px solid #000;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  text-transform: uppercase;\n  color: #000;\n  font-weight: 500;\n  background: #cfe0e8;\n  opacity: 0.6;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover,\n  :focus {\n    opacity: 1;\n    background-color: #87bdd8;\n    color: #fff;\n  }\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport * as s from './MovieSearch.styled';\nimport { GetSearchMovies } from 'components/Fetch/FetchApi';\n\nconst MovieSearch = ({ setMovies }) => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const movieQuery = searchQuery.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const query = form.query.value;\n\n    setSearchQuery({ query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!movieQuery) return;\n\n    async function fetchMovies() {\n      const movies = await GetSearchMovies(movieQuery);\n\n      const requiredMovies = movies.map(\n        ({ id, title, poster_path, vote_average }) => ({\n          id,\n          title,\n          poster_path,\n          vote_average,\n        })\n      );\n\n      setMovies(requiredMovies);\n    }\n\n    fetchMovies();\n  }, [movieQuery, setMovies]);\n\n  return (\n    <s.Div>\n      <s.Form onSubmit={handleSubmit}>\n        <s.Input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search movies\"\n          autoComplete=\"off\"\n          autoFocus\n        />\n        <s.Button type=\"submit\">Search</s.Button>\n      </s.Form>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </s.Div>\n  );\n};\n\nexport default MovieSearch;\n","import { useState } from 'react';\n\nimport MovieSearch from 'components/MovieSearch/MovieSearch';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState('');\n\n  return (\n    <main>\n      <div>\n        <MovieSearch setMovies={setMovies} />\n        {movies !== '' ? (\n          <div>\n            <MoviesList movies={movies} />\n          </div>\n        ) : (\n          <p>No movies... Try to find something</p>\n        )}\n\n        {movies.length === 0 && movies !== '' && (\n          <p>There is no movies with that name</p>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '7ef9ec3d0132c19ab4685d32429ba26e';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport async function GetMovieTrending(page = 1) {\n  const url = `${API_URL}/trending/movie/day?api_key=${KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\nGetMovieTrending();\n\nexport async function GetSearchMovies(query) {\n  const url = `${API_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nexport async function GetMovieDetails(movieId) {\n  const url = `${API_URL}/movie/${movieId}?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieCast(movieId) {\n  const url = `${API_URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieReviews(movieId) {\n  const url = `${API_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nexport const Li = styled.li`\n  list-style: none;\n  width: 200px;\n  :hover,\n  :focus {\n    scale: 1.1;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 24px;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  color: #000;\n  :hover,\n  :focus {\n    color: cornflowerblue;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 700;\n  margin: 0 0 10px 0;\n  font-size: 18px;\n  text-align: center;\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n  height: 300px;\n  display: block;\n  border-radius: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as s from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <s.Ul>\n      {movies.map(({ id, poster_path, title }) => (\n        <s.Li key={id}>\n          <s.Link to={`/movies/${id}`} state={{ from: location }}>\n            <s.Img\n              src={\n                poster_path && `https://image.tmdb.org/t/p/w500/${poster_path}`\n              }\n              alt={title}\n              width=\"200\"\n              height=\"240\"\n            />\n            <s.Title>{title}</s.Title>\n          </s.Link>\n        </s.Li>\n      ))}\n    </s.Ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesList;\n"],"names":["Div","styled","Form","Input","Button","setMovies","useSearchParams","searchQuery","setSearchQuery","movieQuery","get","useEffect","GetSearchMovies","movies","requiredMovies","map","id","title","poster_path","vote_average","fetchMovies","onSubmit","e","preventDefault","form","currentTarget","query","value","reset","type","name","placeholder","autoComplete","autoFocus","Suspense","fallback","Loader","useState","MoviesList","length","KEY","API_URL","GetMovieTrending","page","url","axios","data","results","response","GetMovieDetails","movieId","GetMovieCast","GetMovieReviews","Ul","Li","Link","NavLink","Title","Img","location","useLocation","to","state","from","src","alt","width","height"],"sourceRoot":""}