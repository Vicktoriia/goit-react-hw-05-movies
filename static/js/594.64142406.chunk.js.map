{"version":3,"file":"static/js/594.64142406.chunk.js","mappings":"0PAGaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,EAAKD,EAAAA,GAAAA,GAAH,mGAOFE,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sP,SCOjB,EArBiB,SAAC,GAAc,IAAZI,EAAW,EAAXA,KAClB,OACE,UAAC,EAAD,YACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAQC,GAAE,OAAUC,MAAO,CAAEF,KAAAA,GAA7B,qBAIF,SAAC,EAAD,WACE,SAAC,EAAD,CAAQC,GAAE,UAAaC,MAAO,CAAEF,KAAAA,GAAhC,yBAMP,EC6CD,EAzDqB,WAAO,IAAD,IACjBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAQ,oBAAGP,EAASH,aAAZ,aAAG,EAAgBF,YAAnB,QAA2B,IAMzC,IAJAa,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBX,GAASY,KAAKJ,EAC/B,GAAE,CAACR,KAECO,EACH,OAAO,KAET,IAAMM,EAAcN,EAAUO,aAC1BC,EAAO,IAAIC,KAAKH,GAIZI,EACNV,EADMU,eAAgBC,EACtBX,EADsBW,SAAUC,EAChCZ,EADgCY,aAAcC,EAC9Cb,EAD8Ca,OAAQC,EACtDd,EADsDc,YAGxD,OACE,2BACE,4BACE,mBAAQC,KAAK,SAASC,QARJ,kBAAMnB,EAASK,EAAf,EAQlB,sBAIA,4BACE,gBACEe,IAAK,kCAAoCH,EACzCI,IAAKR,EACLS,MAAO,OAET,4BACE,0BACGT,EADH,KACqBF,EAAKY,cAD1B,QAGA,wCAAgBR,MAChB,sCACA,uBAAID,KAEJ,oCACA,uBAAIE,EAAOQ,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,eAG5C,4BACE,oDACA,SAAC,EAAD,CAAUjC,KAAMY,QAElB,SAAC,KAAD,QAIP,C,sKC3DKsB,EAAM,mCACNC,EAAU,+BAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAAgCC,EAAhC,+BAAuC,EACtCC,EADD,UACUH,EADV,uCACgDD,EADhD,iBAC4DG,GAD5D,SAEkBE,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,mEAaA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAA+BX,GAA/B,kFACCmC,EADD,UACUH,EADV,kBAC2BhC,EAD3B,oBAC8C+B,GAD9C,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA4BvC,GAA5B,kFACCmC,EADD,UACUH,EADV,kBAC2BhC,EAD3B,4BACsD+B,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BxC,GAA/B,kFACCmC,EADD,UACUH,EADV,kBAC2BhC,EAD3B,4BACsD+B,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,kEApBPL,G","sources":["components/MovieNav/MovieNav.styled.jsx","components/MovieNav/MovieNav.jsx","Page/MovieDetails/MovieDetails.jsx","components/Fetch/FetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  display: flex;\n  justify-content: flex-start;\n`;\n\nexport const Li = styled.li`\n  color: #000;\n  font-size: 25px;\n  list-style: none;\n  padding: 13px;\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: cornflowerblue;\n  text-transform: uppercase;\n  font-weight: 500;\n  &.active {\n    color: red;\n  }\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #7a3b2e;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport * as s from './MovieNav.styled';\n\nconst MovieNav = ({ from }) => {\n  return (\n    <s.List>\n      <s.Li>\n        <s.Link to={`cast`} state={{ from }}>\n          Cast\n        </s.Link>\n      </s.Li>\n      <s.Li>\n        <s.Link to={`reviews`} state={{ from }}>\n          Reviews\n        </s.Link>\n      </s.Li>\n    </s.List>\n  );\n};\n\nMovieNav.propTypes = {\n  from: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n\nexport default MovieNav;\n","import { useParams, useLocation, useNavigate, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { GetMovieDetails } from 'components/Fetch/FetchApi';\nimport MovieNav from 'components/MovieNav/MovieNav';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movieInfo, setMovieInfo] = useState();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    GetMovieDetails(movieId).then(setMovieInfo);\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return null;\n  }\n  const releaseDate = movieInfo.release_date;\n  let date = new Date(releaseDate);\n\n  const handleBackClick = () => navigate(backLink);\n\n  const { original_title, overview, vote_average, genres, poster_path } =\n    movieInfo;\n\n  return (\n    <main>\n      <div>\n        <button type=\"button\" onClick={handleBackClick}>\n          Go back\n        </button>\n\n        <div>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + poster_path}\n            alt={original_title}\n            width={250}\n          />\n          <div>\n            <h2>\n              {original_title} ({date.getFullYear()})\n            </h2>\n            <p>User Score: {vote_average}</p>\n            <b>Overview:</b>\n            <p>{overview}</p>\n\n            <b>Genres:</b>\n            <p>{genres.map(({ name }) => name).join(', ')}</p>\n          </div>\n        </div>\n        <div>\n          <h3>Additional information</h3>\n          <MovieNav from={backLink} />\n        </div>\n        <Outlet />\n      </div>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = '7ef9ec3d0132c19ab4685d32429ba26e';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport async function GetMovieTrending(page = 1) {\n  const url = `${API_URL}/trending/movie/day?api_key=${KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\nGetMovieTrending();\n\nexport async function GetSearchMovies(query) {\n  const url = `${API_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nexport async function GetMovieDetails(movieId) {\n  const url = `${API_URL}/movie/${movieId}?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieCast(movieId) {\n  const url = `${API_URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieReviews(movieId) {\n  const url = `${API_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n"],"names":["List","styled","Li","Link","NavLink","from","to","state","movieId","useParams","location","useLocation","navigate","useNavigate","useState","movieInfo","setMovieInfo","backLink","useEffect","GetMovieDetails","then","releaseDate","release_date","date","Date","original_title","overview","vote_average","genres","poster_path","type","onClick","src","alt","width","getFullYear","map","name","join","KEY","API_URL","GetMovieTrending","page","url","axios","data","results","GetMovieCast","GetMovieReviews"],"sourceRoot":""}