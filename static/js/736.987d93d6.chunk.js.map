{"version":3,"file":"static/js/736.987d93d6.chunk.js","mappings":"0PAEaA,EAAMC,EAAAA,GAAAA,IAAH,2LAUHC,EAAKD,EAAAA,GAAAA,GAAH,8EAKFE,EAAKF,EAAAA,GAAAA,GAAH,mFAKFG,EAAMH,EAAAA,GAAAA,IAAH,mGAMHI,EAAQJ,EAAAA,GAAAA,IAAH,8DAKLK,EAAIL,EAAAA,GAAAA,EAAH,mEAIDM,EAAYN,EAAAA,GAAAA,EAAH,0D,SCUtB,EA1Ca,WACX,IAAQO,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAASO,KAAKH,EAC5B,GAAE,CAACJ,IAECG,GAKH,SAAC,EAAD,UACGA,EAAKA,KAAKK,OAAS,GAClB,SAAC,EAAD,UACGL,EAAKA,KAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACb,UAAC,EAAD,YACE,SAAC,EAAD,CACEC,IACEH,EACI,kCAAoCA,EACpC,8DAENI,IAAKH,EACLI,MAAM,MACNC,OAAO,SAET,UAAC,EAAD,YACE,SAAC,EAAD,UAAML,KACN,UAAC,EAAD,yBAAyBC,UAblBH,EADE,OAoBjB,qCA3BG,IA+BV,C,8LC3CKQ,EAAM,mCACNC,EAAU,+BAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAAgCC,EAAhC,+BAAuC,EACtCC,EADD,UACUH,EADV,uCACgDD,EADhD,iBAC4DG,GAD5D,SAEkBE,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,mEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACCL,EADD,UACUH,EADV,iCAC0CD,EAD1C,iCACsES,GADtE,SAEkBJ,EAAAA,EAAAA,IAAUD,GAF5B,cAECM,EAFD,yBAGEA,EAASJ,KAAKC,SAHhB,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+B7B,GAA/B,kFACCsB,EADD,UACUH,EADV,kBAC2BnB,EAD3B,oBAC8CkB,GAD9C,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BN,GAA5B,kFACCsB,EADD,UACUH,EADV,kBAC2BnB,EAD3B,4BACsDkB,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,GAHF,kEAMA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA+B9B,GAA/B,kFACCsB,EADD,UACUH,EADV,kBAC2BnB,EAD3B,4BACsDkB,GADtD,SAEkBK,EAAAA,EAAAA,IAAUD,GAF5B,uBAEGE,EAFH,EAEGA,KAFH,kBAGEA,EAAKC,SAHP,kEApBPL,G","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Fetch/FetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  padding: 20px;\n  margin: 0 auto;\n  max-width: 1280px;\n  border-bottom: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gridGap: 10;\n`;\nexport const Li = styled.li`\n  list-style: none;\n  padding: 5px;\n  max-width: 200px;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 5px;\n`;\nexport const Descr = styled.div`\n  padding-top: 8px;\n  width: 200px;\n`;\n\nexport const P = styled.p`\n  margin: 0 0 10px 0;\n  font-size: 18px;\n`;\nexport const Character = styled.p`\n  margin: 0;\n  font-size: 18px;\n`;\n","import { GetMovieCast } from '../Fetch/FetchApi';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as s  from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    GetMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <s.Div>\n      {cast.cast.length > 0 ? (\n        <s.Ul>\n          {cast.cast.map(({ id, profile_path, name, character }) => (\n            <s.Li key={id}>\n              <s.Img\n                src={\n                  profile_path\n                    ? 'https://image.tmdb.org/t/p/w500' + profile_path\n                    : 'https://dummyimage.com/200x300/858585/fff.jpg&text=No+photo'\n                }\n                alt={name}\n                width=\"200\"\n                height=\"240\"\n              />\n              <s.Descr>\n                <s.P>{name}</s.P>\n                <s.Character>Character: {character}</s.Character>\n              </s.Descr>\n            </s.Li>\n          ))}\n        </s.Ul>\n      ) : (\n        <p>No cast</p>\n      )}\n    </s.Div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = '7ef9ec3d0132c19ab4685d32429ba26e';\nconst API_URL = 'https://api.themoviedb.org/3';\n\nexport async function GetMovieTrending(page = 1) {\n  const url = `${API_URL}/trending/movie/day?api_key=${KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\nGetMovieTrending();\n\nexport async function GetSearchMovies(query) {\n  const url = `${API_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\n\nexport async function GetMovieDetails(movieId) {\n  const url = `${API_URL}/movie/${movieId}?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieCast(movieId) {\n  const url = `${API_URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function GetMovieReviews(movieId) {\n  const url = `${API_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n"],"names":["Div","styled","Ul","Li","Img","Descr","P","Character","movieId","useParams","useState","cast","setCast","useEffect","GetMovieCast","then","length","map","id","profile_path","name","character","src","alt","width","height","KEY","API_URL","GetMovieTrending","page","url","axios","data","results","GetSearchMovies","query","response","GetMovieDetails","GetMovieReviews"],"sourceRoot":""}